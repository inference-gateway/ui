---
services:
  ui:
    build:
      context: ../../..
      target: dev
      dockerfile: Dockerfile
    volumes:
      - ../../..:/app
    ports:
      - "3000:3000"
    env_file:
      - .env.frontend
    depends_on:
      postgres:
        condition: service_healthy
      inference-gateway:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: "2.5"
          memory: 1512M
        reservations:
          cpus: "0.25"
          memory: 256M
    pull_policy: always
    restart: unless-stopped

  inference-gateway:
    image: ghcr.io/inference-gateway/inference-gateway:latest
    env_file:
      - .env.backend
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 256M
        reservations:
          cpus: "0.1"
          memory: 100M
    pull_policy: always
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: inference_gateway
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d inference_gateway"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 128M
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
